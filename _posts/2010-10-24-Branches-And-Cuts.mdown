---
title: The Three20 Branching Model
---

The Three20 Branching Model
===========================

The Three20 branching model defines a set of paradigms used by the Core Team to ensure
stable development on Three20. As a developer using Three20, you can be certain that any
given release within this model is build-able and stable.

This article is split into multiple sections, with each subsequent section providing more
in-depth discussions about the branching model.

Getting Started
---------------

Three20 is a git-based framework. If you're new to git, check out the
[Git Community Book](http://book.git-scm.com/index.html). To focus your reading you should
check out the following articles:

* [Installing Git on Mac OS X](http://code.google.com/p/git-osx-installer/downloads/list?can=3)
* [Getting repositories](http://book.git-scm.com/3_getting_a_git_repository.html)
* [Normal workflow](http://book.git-scm.com/3_normal_workflow.html)
* [Basic branching and merging](http://book.git-scm.com/3_basic_branching_and_merging.html)




Hacking on Three20
------------------

Based off of the branching model described at
[nvie.com](http://nvie.com/posts/a-successful-git-branching-model/).


A branch in Three20 denotes a specific development path. "Mainline", for example, refers to the
[master](http://github.com/facebook/three20) branch (i.e. the default branch). Each major
version release of Three20 has its own branch, e.g.
[v1.0](/roadmap/v1.0) or
[v1.1](/roadmap/v1.1).

What is a Cut?
--------------

A cut of Three20 denotes a known stable point in Three20's development history. Version cuts
denote an accepted, stable release of the source, e.g.
[v1.0a1](/roadmap/v1.0a1) is the first stable cut of the v1.0
branch.
